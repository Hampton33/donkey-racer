# Compiler and linker settings
CXX=g++
CXXFLAGS=-std=c++17 -I./include -I./include/renderer -I./external/glfw/include -I./external/glm/include -IC:/VulkanSDK/1.3.275.0/Include
LDFLAGS=-L./external/glfw/lib-mingw-w64 -LC:/VulkanSDK/1.3.275.0/Lib
LDLIBS=-lglfw3 -lvulkan-1 -lgdi32

# The target executable name
TARGET=app.exe

# Find all .cpp files in the project
SOURCES=$(wildcard src/*.cpp) $(wildcard src/renderer/*.cpp)
# The build directory
BUILDDIR = build

# Define object files for all source files
OBJECTS=$(patsubst %.cpp,$(BUILDDIR)/%.o,$(SOURCES))

# Default target
all: $(TARGET)

# Rule to link the program
$(TARGET): $(OBJECTS)
	$(CXX) $(OBJECTS) -o $(TARGET) $(LDFLAGS) $(LDLIBS)

# Command to create the build directory structure
$(BUILDDIR)/%.o: %.cpp
	if not exist "$(@D)" mkdir "$(@D)"
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Clean target
clean:
	if exist $(BUILDDIR) rmdir /s /q $(BUILDDIR)
	if exist $(TARGET) del /f $(TARGET)

.PHONY: all clean
